// Code generated by ogen, DO NOT EDIT.

package api

import (
	"context"
)

// Handler handles operations described by OpenAPI v3 specification.
type Handler interface {
	// AddFileToTask implements addFileToTask operation.
	//
	// Добавить файл в задачу.
	//
	// POST /tasks/{taskId}/files
	AddFileToTask(ctx context.Context, req *AddFileRequest, params AddFileToTaskParams) (AddFileToTaskRes, error)
	// CreateTask implements createTask operation.
	//
	// Создать новую задачу.
	//
	// POST /tasks
	CreateTask(ctx context.Context) (CreateTaskRes, error)
	// GetTaskStatus implements getTaskStatus operation.
	//
	// Получить статус задачи.
	//
	// GET /tasks/{taskId}
	GetTaskStatus(ctx context.Context, params GetTaskStatusParams) (GetTaskStatusRes, error)
	// GetTasks implements getTasks operation.
	//
	// Получить список всех задач.
	//
	// GET /tasks
	GetTasks(ctx context.Context) ([]Task, error)
}

// Server implements http server based on OpenAPI v3 specification and
// calls Handler to handle requests.
type Server struct {
	h Handler
	baseServer
}

// NewServer creates new Server.
func NewServer(h Handler, opts ...ServerOption) (*Server, error) {
	s, err := newServerConfig(opts...).baseServer()
	if err != nil {
		return nil, err
	}
	return &Server{
		h:          h,
		baseServer: s,
	}, nil
}
